{"version":3,"sources":["script.js"],"names":["lettersPattern","currentGuessCount","currentGuess","document","querySelector","words","solutionWord","chooseWord","randomItem","Math","floor","random","length","console","log","addEventListener","e","key","keypress","test","dataset","letters","updateLetter","deleteFromLetters","_loop","i","setTimeout","revealTile","checkLetter","letter","newLetters","currentTile","updateTiles","tileNumber","innerHTML","oldLetters","slice","deleteFromTiles","innerText","position","guessedLetter","charAt","checkLetterExists","includes","status","concat","tile","classList","add","flipTile","state","remove"],"mappings":"AAAA,aAAA,IAAMA,eAAiB,QACnBC,kBAAoB,EACpBC,aAAeC,SAASC,cAAc,SAAWH,mBAGjDI,MAAQ,CACT,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAC5CC,aAAe,GAEhBC,WAAa,WACf,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAYN,MAAMO,QAAY,EAChEC,QAAQC,IAAIN,GACZF,aAAeD,MAAMG,GACrBK,QAAQC,IAAIR,eAEhBC,aAEAJ,SAASY,iBAAiB,WAAW,SAACC,GAClCH,QAAQC,IAAI,YAAcE,EAAEC,KAC5BJ,QAAQC,IAAKZ,cAChB,IAAIgB,EAAWF,EAAEC,IACjB,GAAsB,GAAnBC,EAASN,QAAeZ,eAAemB,KAAKH,EAAEC,MAAQf,aAAakB,QAAQC,QAAQT,OAAQ,EAE3FC,QAAQC,IAAI,cACZQ,aAAaJ,QACT,GAAY,aAATF,EAAEC,KAAsD,IAAhCf,aAAakB,QAAQC,QACpDR,QAAQC,IAAI,aACZS,yBACI,GAAa,SAATP,EAAEC,KAAyD,GAAvCf,aAAakB,QAAQC,QAAQT,OAAa,CACtEC,QAAQC,IAAI,gBACZ,IAFsE,IAAAU,EAAA,SAE9DC,GAEJC,YAAW,WAEPC,WAAWF,EAAGG,YAAYH,MACvB,IAAJA,IALCA,EAAI,EAAGA,EAAE,EAAGA,IAAKD,EAAjBC,OAYZ,IAAMH,aAAe,SAACO,GAClB,IAEIC,EAFa5B,aAAakB,QAAQC,QAERQ,EAC1BE,EAAcD,EAAWlB,OAC7BV,aAAakB,QAAQC,QAAUS,EAC/BE,YAAYD,EAAaF,IAGvBG,YAAc,SAACC,EAAYJ,GACX1B,SAASC,cAAc,aAAe6B,GAE5CC,UAAYL,GAMtBN,kBAAoB,WACtB,IAAIY,EAAajC,aAAakB,QAAQC,QAElCS,EAAaK,EAAWC,MAAM,GAAI,GACtClC,aAAakB,QAAQC,QAAUS,EAC/BO,gBAAgBF,EAAWvB,SAIzByB,gBAAkB,SAACJ,GACrB9B,SAASC,cAAc,aAAe6B,GAAYK,UAAW,IAM3DV,YAAc,SAACW,GACjB,IAAIC,EAAgBtC,aAAakB,QAAQC,QAAQoB,OAAOF,GAKxD,OAAGC,GAJkBlC,aAAamC,OAAOF,GAK9B,UAEAG,kBAAkBF,GAAiB,UAAY,UAMxDE,kBAAoB,SAACb,GACxB,OAAOvB,aAAaqC,SAASd,IAG1BF,WAAa,SAACF,EAAGmB,GACnB/B,QAAQC,IAAR,OAAA+B,OAAmBpB,EAAnB,cAAAoB,OAAiCD,IACjC,IAAIX,EAAaR,EAAI,EACjBqB,EAAO3C,SAASC,cAAc,aAAe6B,GAEjD,OAAOW,GACH,IAAK,UAAWE,EAAKC,UAAUC,IAAI,WACnC,MAEA,IAAK,UAAWF,EAAKC,UAAUC,IAAI,WACnC,MAEA,IAAK,SAAUF,EAAKC,UAAUC,IAAI,UAGtCC,SAAShB,EAAYW,IAGnBK,SAAW,SAAChB,EAAYiB,GAC1B,IAAIJ,EAAO3C,SAASC,cAAc,aAAe6B,GACjDa,EAAKC,UAAUC,IAAI,WAEnBtB,YAAW,WACPoB,EAAKC,UAAUC,IAAIE,KACpB,KACHxB,YAAW,WACPoB,EAAKC,UAAUI,OAAO,WACtBL,EAAKC,UAAUC,IAAI,cACpB","file":"script.js","sourcesContent":["const lettersPattern = /[a-z]/;\r\nlet currentGuessCount = 1;\r\nlet currentGuess = document.querySelector('#guess' + currentGuessCount);\r\n// let currentLetters = currentGuess.dataset.letters;\r\n\r\nlet words = [\r\n   'baker','store','horse','speak','clone','apple','bread'];\r\n   let solutionWord = '';\r\n\r\nconst chooseWord = () => {\r\n    let randomItem = (Math.floor(Math.random() * (words.length))) + 1;\r\n    console.log(randomItem);\r\n    solutionWord = words[randomItem];\r\n    console.log(solutionWord);\r\n}\r\nchooseWord();\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n    console.log('keypress ' + e.key);\r\n    console.log (currentGuess);\r\n let keypress = e.key;\r\n if(keypress.length == 1 && lettersPattern.test(e.key) && currentGuess.dataset.letters.length <5) {\r\n\r\n    console.log('is letter ');\r\n    updateLetter(keypress);\r\n } else if(e.key == 'Backspace' && currentGuess.dataset.letters != '' ) {\r\n    console.log('backspace');\r\n    deleteFromLetters();\r\n } else if (e.key == 'Enter' && currentGuess.dataset.letters.length == 5) {\r\n    console.log('submit guess');\r\n    for(let i = 0; i<5; i++) {\r\n\r\n        setTimeout(() => {\r\n           // checkLetter(i);\r\n            revealTile(i, checkLetter(i)); \r\n        }, i * 200);\r\n\r\n    }\r\n\r\n }\r\n});\r\n\r\nconst updateLetter = (letter) => {\r\n    let oldletters = currentGuess.dataset.letters;\r\n   // let tileNumber = \r\n    let newLetters = oldletters + letter;\r\n    let currentTile = newLetters.length;\r\n    currentGuess.dataset.letters = newLetters;\r\n    updateTiles(currentTile, letter);\r\n};\r\n\r\nconst updateTiles = (tileNumber, letter) => {\r\n    let currentTile = document.querySelector('#guessTile' + tileNumber);\r\n\r\n    currentTile.innerHTML = letter;\r\n    \r\n};\r\n\r\n//backspace delete last letter\r\n\r\nconst deleteFromLetters = () => {\r\n    let oldLetters = currentGuess.dataset.letters;\r\n\r\n    let newLetters = oldLetters.slice(0, -1);\r\n    currentGuess.dataset.letters = newLetters;\r\n    deleteFromTiles(oldLetters.length);\r\n};\r\n\r\n\r\nconst deleteFromTiles = (tileNumber) => {\r\n    document.querySelector('#guessTile' + tileNumber).innerText ='';\r\n};\r\n\r\n\r\n//check letter to solution\r\n\r\nconst checkLetter = (position) => {\r\n    let guessedLetter = currentGuess.dataset.letters.charAt(position);\r\n    let solutionLetter = solutionWord.charAt(position);\r\n\r\n   //console.log( guessedLetter, solutionLetter);\r\n\r\n    if(guessedLetter == solutionLetter) {\r\n        return 'correct';\r\n    } else {\r\n        return checkLetterExists(guessedLetter) ? 'present' : 'absent';\r\n\r\n\r\n    }\r\n};\r\n\r\nconst checkLetterExists = (letter) => {\r\n   return solutionWord.includes(letter);\r\n};\r\n\r\nconst revealTile = (i, status) => {\r\n    console.log(`i = ${i} status = ${status}`);\r\n    let tileNumber = i + 1;\r\n    let tile = document.querySelector('#guessTile' + tileNumber);\r\n    let state = ''; \r\n    switch(status) {\r\n        case 'correct': tile.classList.add('correct');\r\n        break; \r\n\r\n        case 'present': tile.classList.add('present');\r\n        break;\r\n\r\n        case 'absent': tile.classList.add('absent');\r\n        break;\r\n    }\r\n    flipTile(tileNumber, status);\r\n};\r\n\r\nconst flipTile = (tileNumber, state) => {\r\n    let tile = document.querySelector('#guessTile' + tileNumber);\r\n    tile.classList.add('flip-in');\r\n\r\n    setTimeout(() => {\r\n        tile.classList.add(state);\r\n    }, 200);\r\n    setTimeout(() => {\r\n        tile.classList.remove('flip-in');\r\n        tile.classList.add('flip-out');\r\n    }, 200);\r\n\r\n}"]}