{"version":3,"sources":["script.js"],"names":["lettersPattern","currentGuessCount","currentGuess","document","querySelector","words","solutionWord","chooseWord","randomItem","Math","floor","random","length","console","log","addEventListener","e","key","keypress","test","dataset","letters","updateLetter","deleteFromLetters","submitGuess","_loop","i","setTimeout","revealTile","checkLetter","cheackIfGuessComplete","checkWin","jumpTiles","_loop2","concat","classList","add","letter","newLetters","currentTile","updateTiles","tileNumber","innerHTML","oldLetters","slice","deleteFromTiles","innerText","remove","position","guessedLetter","charAt","checkLetterExists","includes","status","tile","flipTile","state"],"mappings":"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","file":"script.js","sourcesContent":["const lettersPattern = /[a-z]/;\r\nlet currentGuessCount = 1;\r\nlet currentGuess = document.querySelector('#guess' + currentGuessCount);\r\n// let currentLetters = currentGuess.dataset.letters;\r\n\r\nlet words = [\r\n   'baker','store','horse','speak','clone','apple','bread'];\r\n   let solutionWord = '';\r\n\r\nconst chooseWord = () => {\r\n    let randomItem = (Math.floor(Math.random() * (words.length))) + 1;\r\n    console.log(randomItem);\r\n    solutionWord = words[randomItem];\r\n    console.log(solutionWord);\r\n}\r\nchooseWord();\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n    console.log('keypress ' + e.key);\r\n    console.log (currentGuess);\r\n let keypress = e.key;\r\n if(keypress.length == 1 && lettersPattern.test(e.key) && currentGuess.dataset.letters.length <5) {\r\n\r\n    console.log('is letter ');\r\n    updateLetter(keypress);\r\n } else if(e.key == 'Backspace' && currentGuess.dataset.letters != '' ) {\r\n    console.log('backspace');\r\n    deleteFromLetters();\r\n } else if (e.key == 'Enter' && currentGuess.dataset.letters.length == 5) {\r\n    submitGuess();\r\n }\r\n});\r\n\r\nconst submitGuess = () => {\r\n    console.log('submit guess');\r\n    for(let i = 0; i<5; i++) {\r\n\r\n        setTimeout(() => {\r\n           // checkLetter(i);\r\n            revealTile(i, checkLetter(i)); \r\n        }, i * 200);\r\n\r\n    }\r\n}\r\n\r\nconst cheackIfGuessComplete = (i) => {\r\n    if(i == 4 ) {\r\n        checkWin();\r\n    } else {\r\n        console.log('not win?')\r\n    }\r\n}\r\nconst checkWin = () => {\r\n    if(solutionWord == currentGuess.dataset.letters) {\r\n        jumpTiles();\r\n    } else {\r\n        currentGuessCount++;\r\n        currentGuess = document.querySelector('#guess' + currentGuessCount);\r\n    }\r\n}\r\n\r\nconst jumpTiles = () => {\r\n      for(let i = 0; i<5; i++) {\r\n        setTimeout(() => {\r\n            let currentTile = document.querySelector(`#guess${currentGuessCount}Tile${i+1}`);\r\n            currentTile.classList.add('jump');\r\n        }, i * 200);\r\n\r\n\r\n      }\r\n}\r\nconst updateLetter = (letter) => {\r\n    let oldletters = currentGuess.dataset.letters;\r\n   // let tileNumber = \r\n    let newLetters = oldletters + letter;\r\n    let currentTile = newLetters.length;\r\n    currentGuess.dataset.letters = newLetters;\r\n    updateTiles(currentTile, letter);\r\n};\r\n\r\nconst updateTiles = (tileNumber, letter) => {\r\n    let currentTile = document.querySelector('#guess'+currentGuessCount +'Tile' + tileNumber);\r\n\r\n    currentTile.innerHTML = letter;\r\n    currentTile.classList.add('has-letter');\r\n};\r\n\r\n//backspace delete last letter\r\n\r\nconst deleteFromLetters = () => {\r\n    let oldLetters = currentGuess.dataset.letters;\r\n\r\n    let newLetters = oldLetters.slice(0, -1);\r\n    currentGuess.dataset.letters = newLetters;\r\n    deleteFromTiles(oldLetters.length);\r\n};\r\n\r\n\r\nconst deleteFromTiles = (tileNumber) => {\r\n    let currentTile = document.querySelector('#guess'+currentGuessCount+'Tile' + tileNumber);\r\n    currentTile.innerText ='';\r\n    currentTile.classList.remove('has-letter');\r\n};\r\n\r\n\r\n//check letter to solution\r\n\r\nconst checkLetter = (position) => {\r\n    let guessedLetter = currentGuess.dataset.letters.charAt(position);\r\n    let solutionLetter = solutionWord.charAt(position);\r\n\r\n   //console.log( guessedLetter, solutionLetter);\r\n\r\n    if(guessedLetter == solutionLetter) {\r\n        return 'correct';\r\n    } else {\r\n        return checkLetterExists(guessedLetter) ? 'present' : 'absent';\r\n\r\n\r\n    }\r\n};\r\n\r\nconst checkLetterExists = (letter) => {\r\n   return solutionWord.includes(letter);\r\n};\r\n\r\nconst revealTile = (i, status) => {\r\n    console.log(`i = ${i} status = ${status}`);\r\n    let tileNumber = i + 1;\r\n    let tile = document.querySelector('#guess'+currentGuessCount+'Tile' + tileNumber);\r\n    let state = ''; \r\n    switch(status) {\r\n        case 'correct': tile.classList.add('correct');\r\n        break; \r\n\r\n        case 'present': tile.classList.add('present');\r\n        break;\r\n\r\n        case 'absent': tile.classList.add('absent');\r\n        break;\r\n    }\r\n    flipTile(tileNumber, status);\r\n    cheackIfGuessComplete(i);\r\n\r\n};\r\n\r\nconst flipTile = (tileNumber, state) => {\r\n    let tile = document.querySelector('#guess'+currentGuessCount+'Tile' + tileNumber);\r\n    tile.classList.add('flip-in');\r\n\r\n    setTimeout(() => {\r\n        tile.classList.add(state);\r\n    }, 200);\r\n    setTimeout(() => {\r\n        tile.classList.remove('flip-in');\r\n        tile.classList.add('flip-out');\r\n    }, 200);\r\n    setTimeout(() => {\r\n        tile.classList.remove('flip-out');\r\n    }, 1500);\r\n\r\n}"]}